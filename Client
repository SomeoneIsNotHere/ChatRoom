package client;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;

public class Client {
	
	private DatagramSocket socket;
	
	private Thread send;
	
	private String name, IPaddress;
	private int port;
	private InetAddress ip;
	
	private int ID = -1;
	
	public Client(String name, String IPaddress, int port){
		this.name = name;
		this.IPaddress = IPaddress;
		this.port = port;
	}
	
	public String getName(){
		return name;
	}
	
	public String getIP(){
		return IPaddress;
	}
	
	public int getPort(){
		return port;
	}
	
	public boolean openConnection(String IPaddress){
		
		try {
			socket = new DatagramSocket();
			ip = InetAddress.getByName(IPaddress);
		} 
			catch (UnknownHostException e) {
				e.printStackTrace();
				return false;
			} 
				catch (SocketException e) {
					e.printStackTrace();
					return false;
				}
		
		return true;
	}
	
	public String receive(){
		
		byte[] data = new byte[1024];
		DatagramPacket packet = new DatagramPacket(data, data.length);
		
		try {
			socket.receive(packet);
		} 
			catch (IOException e) {
				e.printStackTrace();
			}
		
		String message = new String(packet.getData());

		return message;
		
	}
	
	public void send(final byte[] data){
		send = new Thread("Send"){
			public void run(){
				DatagramPacket packet = new DatagramPacket(data, data.length, ip, port);
				try {
					socket.send(packet);
				} 
					catch (IOException e) {
						e.printStackTrace();
					}
			}
		};
		send.start();
	}
	
	public void close(){
		new Thread(){
			public void run(){
				synchronized(socket){
					socket.close();
				}	
			}
		}.start();
	}

	public void setID(int ID) {
		this.ID = ID;
		
	}
	
	public int getId(){
		return ID;
	}

}
